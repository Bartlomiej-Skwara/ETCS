#!/bin/bash
function _kill_etcs() {
    kill $(jobs -p) 2>/dev/null
}

SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
if [[ $1 = "evc" ]]; then
    exec "$DIR"/evc
elif [[ $1 = "dmi" ]]; then
    exec "$DIR"/dmi
else
    "$DIR"/dmi &
    dmi_pid=$!
    "$DIR"/evc &
    evc_pid=$!
fi
trap _kill_etcs SIGINT SIGTERM
if [[ ${BASH_VERSINFO[0]} -gt 4 ]] || { [[ ${BASH_VERSINFO[0]} -eq 4 ]] && [[ ${BASH_VERSINFO[1]} -ge 3 ]]; }; then
    wait -n
else
    while true; do
        if ! kill -0 $dmi_pid 2>/dev/null || ! kill -0 $evc_pid 2>/dev/null; then
            break
        fi
        sleep 1
    done
fi
_kill_etcs
